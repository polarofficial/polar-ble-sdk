plugins {
    id('com.android.library')
    id('kotlin-android')
    id('kotlin-kapt')
    id('com.google.protobuf')
    id("org.jetbrains.dokka") version "1.6.0"
    id('maven-publish')
}

import java.util.regex.Pattern

def getVersion = { ->
    def stdout = new ByteArrayOutputStream()
    exec {
        commandLine 'git', 'describe', '--tags'
        standardOutput = stdout
    }
    def pattern = Pattern.compile("^([0-9]*)(\\.)([0-9]*)(\\.)([0-9]*)")
    def matcher = pattern.matcher(stdout.toString().trim())
    if (matcher.matches()) {
        String MAJOR = matcher.group(1)
        String MINOR = matcher.group(3)
        String PATCH = matcher.group(5)
        def VERSION = MAJOR + "." + MINOR + "." + PATCH
        println VERSION
        return VERSION
    } else {
        return stdout.toString().trim()
    }
}

android {
    namespace = 'com.polar.androidcommunications'

    compileSdkVersion 31

    defaultConfig {
        minSdkVersion 21
        targetSdkVersion 31
        versionCode 14
        versionName "14"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes.all { buildType ->
        def version = getVersion()
        buildConfigField 'String', 'GIT_VERSION', "\"$version\""
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    flavorDimensions 'library'
    productFlavors {
        androidCommunications {
            dimension "library"
        }
        sdk {
            dimension "library"
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    publishing {
        singleVariant("sdkRelease") {
            withSourcesJar()
        }
    }
}

tasks.dokkaJavadoc.configure {
    outputDirectory.set(file("docs/html"))
    dokkaSourceSets {
        named("main") {
            perPackageOption {
                matchingRegex.set(".*\\.androidcommunications.*")
                suppress.set(true)
            }
        }
    }
}

afterEvaluate {
    publishing {
        publications {
            aar(MavenPublication) {
                from components.sdkRelease

                groupId 'com.polar'
                version = getVersion()
                artifactId project.getName()
            }
        }
    }
}

protobuf {
    protoc {
        artifact = "com.google.protobuf:protoc:3.20.0"
    }
    generateProtoTasks {
        all().each { task ->
            task.builtins {
                java {
                    option "lite"
                }
            }
        }
    }
}

dependencies {
    implementation 'io.reactivex.rxjava3:rxandroid:3.0.0'
    implementation 'io.reactivex.rxjava3:rxjava:3.1.3'
    implementation 'commons-io:commons-io:2.11.0'
    implementation 'androidx.annotation:annotation:1.3.0'
    implementation "androidx.core:core-ktx:1.7.0"
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    sdkImplementation 'com.google.protobuf:protobuf-javalite:3.20.0'
    testImplementation 'junit:junit:4.13.2'
    testImplementation 'org.mockito:mockito-core:4.3.1'
    testImplementation 'io.mockk:mockk:1.12.2'
    testImplementation 'androidx.test:runner:1.4.0'
    testImplementation 'androidx.test.espresso:espresso-core:3.4.0'
    androidTestImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test:core:1.4.0'
    androidTestImplementation 'androidx.test:runner:1.4.0'
    androidTestImplementation 'androidx.test:rules:1.4.0'
}
